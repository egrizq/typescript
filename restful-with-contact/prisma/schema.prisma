// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// marked with ? to indicate it can be null.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
    username String @id @db.VarChar(100)
    password String @db.VarChar(100)
    name String @db.VarChar(100)
    token String? @db.VarChar(100)

    // contacts: A field representing a relation to another model named Contact. 
    // This indicates that a user can have multiple contacts. 
    // The [] syntax indicates that it's a one-to-many relation, meaning one user can have multiple contacts.
    contacts Contact[] 
    
    @@map("users") // you're explicitly instructing Prisma to name the table in the database as "users". 
}

model Contact {
    id Int @id @default(autoincrement())
    first_name String @db.VarChar(100)
    last_name String? @db.VarChar(100)
    email String? @db.VarChar(100)
    phone String? @db.VarChar(20)
    username String @db.VarChar(100)

    user User @relation(fields: [username], references: [username])
    addresses Address[]

    @@map("contacts")
}

model Address {
    id Int @id @default(autoincrement())
    street String? @db.VarChar(255)
    city String? @db.VarChar(100)
    province String? @db.VarChar(100)
    country String @db.VarChar(100)
    postal_code String @db.VarChar(100)
    contact_id Int

    contact Contact @relation(fields: [contact_id], references: [id])

    @@map("addresses")
}